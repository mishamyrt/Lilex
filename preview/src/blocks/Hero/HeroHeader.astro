---
import MagnifyingText from "../../components/Animations/MagnifyingText.astro";
---

<div class="heroHeader">
	<MagnifyingText class="heroText" distance={250} min={100} max={700}>
		Lilex.<br />
		The font<br />
		for developers
	</MagnifyingText>
</div>
<div class="heroCursor" />

<script>
	import { blocksObserver } from "../../controllers/block-observer";

	const cursor = document.querySelector<HTMLElement>(".heroCursor");
	const text = document.querySelector(".heroText");
	const header = document.querySelector(".heroHeader");
	if (!cursor || !text || !header) {
		throw new Error("HeroHeader DOM structure not found");
	}
	let cursorDiameter = 0;
	let cursorRadius = 0;
	let isCursorVisible = false;

	const handleResize = () => {
		cursorDiameter = window.innerWidth * 0.3;
		cursorRadius = cursorDiameter / 2;
		cursor.style.width = `${cursorDiameter}px`;
		cursor.style.height = `${cursorDiameter}px`;
		text.setAttribute("distance", cursorRadius.toString());
	};

	const handleMouseMove = (event: MouseEvent) => {
		const x = window.screenX + event.clientX - cursorRadius;
		const y = window.scrollY + event.clientY - cursorRadius;
		if (!isCursorVisible) {
			cursor.style.opacity = "1";
			isCursorVisible = true;
		}
		cursor.style.transform = `translate(${x}px, ${y}px)`;
	};

	const handleMouseOut = () => {
		cursor.style.opacity = "0";
		isCursorVisible = false;
	};

	handleResize();
	blocksObserver.addVisibilityListener("hero", (isVisible) => {
		if (isVisible) {
			window.addEventListener("mousemove", handleMouseMove);
			window.addEventListener("resize", handleResize);
			window.addEventListener("mouseout", handleMouseOut);
		} else {
			cursor.style.opacity = "0";
			isCursorVisible = false;
			window.removeEventListener("mousemove", handleMouseMove);
			window.removeEventListener("resize", handleResize);
			window.removeEventListener("mouseout", handleMouseOut);
		}
	});
</script>

<style lang="scss">
	.heroHeader {
		font-size: 80px;
		font-weight: 100;
		line-height: 1.13;
		touch-action: manipulation;
	}

	.heroCursor {
		position: absolute;
		top: 0;
		left: 0;
		border-radius: 50%;
		background-color: transparent;
		box-shadow: inset 0 0 35px rgba(0, 0, 0, 0.1);
		pointer-events: none;
		transition: opacity var(--transition-slow);
		opacity: 0;
	}

	@media (width <= 840px) {
		.heroHeader {
			font-size: 9.5vw;
		}
	}


</style>
