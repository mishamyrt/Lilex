---
import LayoutBlock from "../../components/LayoutBlock.astro";
import Typography from "../../components/Typography.astro";
import CodeInput from "./CodeInput.astro";

const code = `
/**
* JSDoc example
* @param {Object} block - The block to be processed.
* @param {string} cls - The class name to be added to the block.
*/
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\bno\-highlight\b/) != -1) {
      return process(block, true, 0x0F) + \` class="\${cls}"\`;
    }
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i <= classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}	
`;
---

<LayoutBlock theme="githubDark" name="playground">
	<CodeInput code={code} />

	
</LayoutBlock>

<style lang="scss">
	.playground {
		display: flex;
		width: 100%;
	}

	.playground-preview {
		font: var(--typography-text-m);
		color: var(--color-content-primary);
		position: relative;
		z-index: 2;
		width: 100%;
		height: 100%;
		background-color: var(--color-background-secondary);
		border-radius: var(--border-radius-m);
		padding: var(--space-m);
	}

	#playground-input {
		position: absolute;
		z-index: 1;
		font: var(--typography-text-m);
		color: var(--color-content-primary);
		width: 100%;
		height: 100%;
		background-color: var(--color-background-secondary);
		border-radius: var(--border-radius-m);
		padding: var(--space-m);
	}
</style>
